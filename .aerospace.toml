# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget rm ~/.aerospaceservice',
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 12
inner.vertical = 12
outer.bottom = 12
outer.left = 12
outer.right = 12
outer.top = 12

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-comma = 'layout accordion horizontal vertical'
# alt-m = 'exec-and-forget ~/.config/aerospace/toggle-floating-centered.sh'
alt-slash = 'layout tiles horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-i = 'focus up'
alt-j = 'focus left'
alt-k = 'focus down'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-i = 'move up'
alt-shift-j = 'move left'
alt-shift-k = 'move down'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# alt-1 = 'workspace 1'
# alt-2 = 'workspace 2'
# alt-3 = 'workspace 3'
# alt-4 = 'workspace 4'
# alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
alt-a = ['workspace A', 'exec-and-forget open -a Safari']
# alt-b = 'workspace B'
alt-c = 'exec-and-forget ~/dotfiles/.config/aerospace/launch-code.sh'
alt-d = ['workspace D', 'exec-and-forget open -a Notion']
alt-e = ['exec-and-forget ~/dotfiles/.config/aerospace/launch-messages.sh']
alt-f = ['workspace F', 'exec-and-forget open -a Fork']
alt-g = ['workspace G', 'exec-and-forget open -a Ghostty']
# alt-i = 'workspace I'
# alt-m = 'workspace M'
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# alt-s = 'workspace S'
# alt-t = 'workspace T'
# alt-u = 'workspace U'
alt-v = ['workspace V', 'exec-and-forget open -a Spotify']
alt-w = ['workspace W', 'exec-and-forget open -a Calendar']
alt-x = ['workspace X', 'exec-and-forget open /Applications/Xcode.app']
# alt-y = 'workspace Y'
alt-z = 'workspace Z'
cmd-alt-ctrl-shift-p = "workspace-back-and-forth"

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# alt-shift-1 = 'move-node-to-workspace 1'
# alt-shift-2 = 'move-node-to-workspace 2'
# alt-shift-3 = 'move-node-to-workspace 3'
# alt-shift-4 = 'move-node-to-workspace 4'
# alt-shift-5 = 'move-node-to-workspace 5'
# alt-shift-6 = 'move-node-to-workspace 6'
# alt-shift-7 = 'move-node-to-workspace 7'
# alt-shift-8 = 'move-node-to-workspace 8'
# alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-a = 'move-node-to-workspace A'
# alt-shift-b = 'move-node-to-workspace B'
alt-shift-c = 'move-node-to-workspace C'
alt-shift-d = 'move-node-to-workspace D'
alt-shift-e = 'move-node-to-workspace E'
alt-shift-f = 'move-node-to-workspace F'
alt-shift-g = 'move-node-to-workspace G'
# alt-shift-i = 'move-node-to-workspace I'
# alt-shift-m = 'move-node-to-workspace M'
# alt-shift-n = 'move-node-to-workspace N'
# alt-shift-o = 'move-node-to-workspace O'
# alt-shift-p = 'move-node-to-workspace P'
# alt-shift-q = 'move-node-to-workspace Q'
# alt-shift-r = 'move-node-to-workspace R'
# alt-shift-s = 'move-node-to-workspace S'
# alt-shift-t = 'move-node-to-workspace T'
# alt-shift-u = 'move-node-to-workspace U'
alt-shift-v = 'move-node-to-workspace V'
alt-shift-w = 'move-node-to-workspace W'
alt-shift-x = 'move-node-to-workspace X'
# alt-shift-y = 'move-node-to-workspace Y'
alt-shift-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-backslash = [
  'mode service',
  'exec-and-forget touch ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
# See: https://nikitabobko.github.io/AeroSpace/commands#resize
equal = 'resize smart +50'
minus = 'resize smart -50'

alt-shift-backslash = [
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]
backspace = [
  'close-all-windows-but-current',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]
esc = [
  'reload-config',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]
f = [
  'layout floating tiling',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
] # Toggle between floating and tiling layout
m = [
  'fullscreen',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
] # Toggle fullscreen
r = [
  'flatten-workspace-tree',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
] # reset layout

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main', 'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`']

alt-shift-h = [
  'join-with left',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]
alt-shift-j = [
  'join-with down',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]
alt-shift-k = [
  'join-with up',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]
alt-shift-l = [
  'join-with right',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]

down = 'volume down'
shift-down = [
  'volume set 0',
  'mode main',
  'exec-and-forget rm ~/.aerospaceservice && sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=`aerospace list-workspaces --focused`',
]
up = 'volume up'

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = ['move-node-to-workspace C']

[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = ['move-node-to-workspace C']

[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode'
run = ['move-node-to-workspace X']

[[on-window-detected]]
if.app-id = 'com.apple.iphonesimulator'
run = ['move-node-to-workspace X']

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['layout floating', 'move-node-to-workspace G']

[[on-window-detected]]
if.app-id = 'com.DanPristupov.Fork'
run = ['layout floating', 'move-node-to-workspace F']

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['move-node-to-workspace V']

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = ['move-node-to-workspace A']

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = ['move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = ['move-node-to-workspace W']

[[on-window-detected]]
if.app-id = 'notion.id'
run = ['move-node-to-workspace D']

[[on-window-detected]]
run = ['move-node-to-workspace Z']

# osascript -e 'id of app "Notion"'
